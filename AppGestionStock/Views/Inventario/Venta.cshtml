@model Venta

@{
    ViewData["Title"] = "Realizar Venta";
}

@{
    List<VistaProductoTienda> productos = (List<VistaProductoTienda>)ViewData["PRODUCTOS"];
}
<link rel="stylesheet" href="~/css/EstilosFormVentas.css" asp-append-version="true" />

<div class="container py-4">
    <h1 class="text-center main-title">Registrar Venta</h1>

    @if (ViewBag.MensajeExito != null)
    {
        <div class="success-panel">
            <h3 class="mb-3">¡Operación Exitosa!</h3>
            <p class="lead">@ViewBag.MensajeExito</p>
            <a asp-controller="Home" asp-action="Index" class="btn btn-primary">Volver al Inicio</a>
        </div>
    }
    else
    {
        <div class="row justify-content-center">
            <div class="col-md-8">
                <div class="card shadow p-4">
                    <div class="card-body">
                        <form asp-action="Venta" method="post" id="ventaForm">
                            <div id="paso1" class="step-active">
                                <h4 class="mb-4 text-center">Información Básica</h4>

                                <div class="form-group mb-3">
                                    <label asp-for="FechaVenta" class="form-label custom-label">Fecha de Venta:</label>
                                    <input asp-for="FechaVenta" class="form-control custom-input" />
                                </div>

                                <div class="form-group mb-3">
                                    <label asp-for="IdTienda" class="form-label custom-label">Tienda:</label>
                                    <select asp-for="IdTienda" class="form-control custom-select">
                                        <option value="">Seleccione una tienda</option>
                                        @foreach (var tienda in (List<Tienda>)ViewData["TIENDAS"])
                                        {
                                            <option value="@tienda.IdTienda">@tienda.Nombre</option>
                                        }
                                    </select>
                                </div>

                                <div class="form-group mb-4">
                                    <label asp-for="IdCliente" class="form-label custom-label">Cliente:</label>
                                    <input asp-for="IdCliente" class="form-control custom-input" placeholder="Ingrese ID del cliente" />
                                </div>

                                <div class="text-center">
                                    <button type="submit" name="siguientePaso" value="true" class="btn btn-primary">
                                        Continuar <i class="fas fa-arrow-right"></i>
                                    </button>
                                </div>
                            </div>

                            <div id="paso2" style="display: none;">
                                <h4 class="mb-4 text-center">Detalle de Productos</h4>

                                <div id="detallesVenta">
                                    <div class="detalle-venta" id="detalleActual">
                                        <div class="form-group mb-3">
                                            <label class="form-label custom-label">Producto:</label>
                                            <select id="idProducto" class="form-control custom-select">
                                                <option value="">Seleccione un producto</option>
                                                @if (productos != null)
                                                {
                                                    @foreach (var producto in productos)
                                                    {
                                                        <option value="@producto.IdProducto"
                                                                data-precio="@producto.Precio.ToString(System.Globalization.CultureInfo.InvariantCulture)"
                                                                data-stock="@producto.StockTienda">
                                                            @producto.Nombre
                                                        </option>
                                                    }
                                                }
                                            </select>
                                            <div id="stockDisponible" class="stock-info mt-2" style="display: none;"></div>
                                        </div>

                                        <div class="row">
                                            <div class="col-md-6">
                                                <div class="form-group mb-3">
                                                    <label class="form-label custom-label">Cantidad:</label>
                                                    <input type="number" id="cantidad" class="form-control custom-input" min="1" />
                                                </div>
                                            </div>
                                            <div class="col-md-6">
                                                <div class="form-group mb-3">
                                                    <label class="form-label custom-label">Precio Unitario:</label>
                                                    <input type="number" step="0.01" id="precioUnidad" class="form-control custom-input" readonly />
                                                </div>
                                            </div>
                                        </div>
                                    </div>
                                </div>

                                <div class="subtle-divider"></div>

                                <div id="productosAgregados" class="mt-3 mb-3" style="display: none;">
                                    <h5 class="mb-3">Productos Agregados</h5>
                                    <div id="listaProductos" class="mb-3"></div>
                                </div>

                                <div class="buttons-container">
                                    <button type="button" id="agregarProducto" class="btn btn-secondary">
                                        <i class="fas fa-plus"></i> Agregar Producto
                                    </button>
                                    <button type="submit" class="btn btn-primary" id="registrarVenta">
                                        <i class="fas fa-check"></i> Finalizar Venta
                                    </button>
                                </div>

                                <input type="hidden" asp-for="IdTienda" />
                                <input type="hidden" asp-for="FechaVenta" />
                                <input type="hidden" asp-for="IdCliente" />
                            </div>
                        </form>
                    </div>
                </div>
            </div>
        </div>
    }
</div>

<script src="https://code.jquery.com/jquery-3.6.0.min.js"></script>
<script src="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/5.15.4/js/all.min.js"></script>
<script src="https://cdn.jsdelivr.net/npm/sweetalert2@11"></script>
<script>
    let detalles = []; // Lista para almacenar los detalles de venta

    document.getElementById('idProducto').addEventListener('change', function() {
        let selectedOption = this.options[this.selectedIndex];
        let precio = parseFloat(selectedOption.getAttribute('data-precio'));
        let stock = parseInt(selectedOption.getAttribute('data-stock'));
        let stockDisplay = document.getElementById('stockDisponible');

        if (!isNaN(precio)) {
            document.getElementById('precioUnidad').value = precio.toFixed(2);
        } else {
            document.getElementById('precioUnidad').value = '';
        }

        if (!isNaN(stock)) {
            stockDisplay.textContent = `Stock disponible: ${stock} unidades`;
            stockDisplay.style.display = 'inline-block';
            document.getElementById('cantidad').max = stock;
            document.getElementById('cantidad').value = 1; // Valor predeterminado
        } else {
            stockDisplay.style.display = 'none';
            document.getElementById('cantidad').max = '';
            document.getElementById('cantidad').value = '';
        }
    });

    document.getElementById('cantidad').addEventListener('input', function() {
        let stock = parseInt(document.getElementById('idProducto').options[document.getElementById('idProducto').selectedIndex].getAttribute('data-stock'));
        if (parseInt(this.value) > stock) {
            this.value = stock;
        } else if (parseInt(this.value) < 1) {
            this.value = 1;
        }
    });

    document.getElementById('agregarProducto').addEventListener('click', function() {
        // Obtener los valores del detalle actual
        let productoSelect = document.getElementById('idProducto');
        let idProducto = productoSelect.value;
        let nombreProducto = productoSelect.options[productoSelect.selectedIndex].text;
        let cantidad = document.getElementById('cantidad').value;
        let precioUnidad = document.getElementById('precioUnidad').value;

        // Validar que se hayan ingresado los datos necesarios
        if (!idProducto || !cantidad || !precioUnidad) {
            alert('Por favor complete todos los campos del producto');
            return;
        }

        // Agregar el detalle a la lista
        detalles.push({
            IdProducto: idProducto,
            Nombre: nombreProducto,
            Cantidad: cantidad,
            PrecioUnidad: precioUnidad,
            Total: (parseFloat(cantidad) * parseFloat(precioUnidad)).toFixed(2)
        });

        // Actualizar la lista visual de productos
        actualizarListaProductos();

        // Limpiar el detalle actual
        productoSelect.value = '';
        document.getElementById('cantidad').value = '';
        document.getElementById('precioUnidad').value = '';
        document.getElementById('stockDisponible').style.display = 'none';
    });

    function actualizarListaProductos() {
        let listaDiv = document.getElementById('listaProductos');
        let productosDiv = document.getElementById('productosAgregados');

        if (detalles.length > 0) {
            productosDiv.style.display = 'block';

            // Limpiar lista actual
            listaDiv.innerHTML = '';

            // Crear tabla de productos
            let tabla = document.createElement('table');
            tabla.className = 'table table-sm table-hover';

            // Cabecera de tabla
            let thead = document.createElement('thead');
            thead.innerHTML = `
                <tr class="bg-light">
                    <th>Producto</th>
                    <th>Cantidad</th>
                    <th>Precio Unit.</th>
                    <th>Total</th>
                </tr>
            `;
            tabla.appendChild(thead);

            // Cuerpo de tabla
            let tbody = document.createElement('tbody');
            let totalGeneral = 0;

            detalles.forEach((detalle, index) => {
                let tr = document.createElement('tr');
                tr.innerHTML = `
                    <td>${detalle.Nombre}</td>
                    <td>${detalle.Cantidad}</td>
                    <td>$${parseFloat(detalle.PrecioUnidad).toFixed(2)}</td>
                    <td>$${detalle.Total}</td>
                `;
                tbody.appendChild(tr);
                totalGeneral += parseFloat(detalle.Total);
            });

            // Añadir fila de total
            let trTotal = document.createElement('tr');
            trTotal.className = 'font-weight-bold';
            trTotal.innerHTML = `
                <td colspan="3" class="text-right">Total:</td>
                <td>$${totalGeneral.toFixed(2)}</td>
            `;
            tbody.appendChild(trTotal);

            tabla.appendChild(tbody);
            listaDiv.appendChild(tabla);
        } else {
            productosDiv.style.display = 'none';
        }
    }

        document.getElementById('registrarVenta').addEventListener('click', function(event) {
        event.preventDefault(); // Prevenir envío del formulario

        // Verificar si hay un producto pendiente por agregar
        let idProducto = document.getElementById('idProducto').value;
        let cantidad = document.getElementById('cantidad').value;
        let precioUnidad = document.getElementById('precioUnidad').value;

        if (idProducto && cantidad && precioUnidad) {
            // Hay un producto pendiente de agregar
            let productoSelect = document.getElementById('idProducto');
            let nombreProducto = productoSelect.options[productoSelect.selectedIndex].text;

            detalles.push({
                IdProducto: idProducto,
                Nombre: nombreProducto,
                Cantidad: cantidad,
                PrecioUnidad: precioUnidad,
                Total: (parseFloat(cantidad) * parseFloat(precioUnidad)).toFixed(2)
            });
        }

        if (detalles.length === 0) {
            Swal.fire({
                icon: 'error',
                title: 'Error',
                text: 'Debe agregar al menos un producto para registrar la venta',
                confirmButtonColor: '#0066cc'
            });
            return;
        }

        // Construir la tabla para el SweetAlert
        let tablaHTML = `
            <table class="table table-bordered mt-3">
                <thead class="bg-light">
                    <tr>
                        <th>Producto</th>
                        <th>Cantidad</th>
                        <th>Precio Unit.</th>
                        <th>Total</th>
                    </tr>
                </thead>
                <tbody>
        `;

        let totalGeneral = 0;
        detalles.forEach(detalle => {
            const subtotal = parseFloat(detalle.Total || (detalle.Cantidad * detalle.PrecioUnidad).toFixed(2));
            totalGeneral += subtotal;

            tablaHTML += `
                <tr>
                    <td>${detalle.Nombre}</td>
                    <td>${detalle.Cantidad}</td>
                    <td>$${parseFloat(detalle.PrecioUnidad).toFixed(2)}</td>
                    <td>$${subtotal.toFixed(2)}</td>
                </tr>
            `;
        });

        tablaHTML += `
                </tbody>
                <tfoot>
                    <tr>
                        <td colspan="3" class="text-right font-weight-bold">Total:</td>
                        <td class="font-weight-bold">$${totalGeneral.toFixed(2)}</td>
                    </tr>
                </tfoot>
            </table>
        `;

        // Información de la venta
        const fechaVenta = document.querySelector('[name="FechaVenta"]').value;
        const tiendaSelect = document.querySelector('[name="IdTienda"]');
        const tiendaNombre = tiendaSelect.options[tiendaSelect.selectedIndex].text;
        const idCliente = document.querySelector('[name="IdCliente"]').value;

        // Mostrar SweetAlert con la información de la venta
        Swal.fire({
            title: 'Confirmar Venta',
            html: `
                <div class="text-left">
                    <p><strong>Fecha:</strong> ${fechaVenta}</p>
                    <p><strong>Tienda:</strong> ${tiendaNombre}</p>
                    <p><strong>Cliente:</strong> ${idCliente}</p>
                    <h5 class="mt-4 mb-2">Detalle de Productos</h5>
                    ${tablaHTML}
                </div>
            `,
            icon: 'info',
            showCancelButton: true,
            confirmButtonColor: '#0066cc',
            cancelButtonColor: '#6c757d',
            confirmButtonText: 'Confirmar Venta',
            cancelButtonText: 'Cancelar',
            width: '600px'
        }).then((result) => {
            if (result.isConfirmed) {
                // Proceder con el envío del formulario
                const form = document.getElementById('ventaForm');

                // Agregar los detalles almacenados al formulario
                detalles.forEach((detalle, index) => {
                    let idProductoInput = document.createElement('input');
                    idProductoInput.type = 'hidden';
                    idProductoInput.name = `idProducto[${index}]`;
                    idProductoInput.value = detalle.IdProducto;
                    form.appendChild(idProductoInput);

                    let cantidadInput = document.createElement('input');
                    cantidadInput.type = 'hidden';
                    cantidadInput.name = `cantidad[${index}]`;
                    cantidadInput.value = detalle.Cantidad;
                    form.appendChild(cantidadInput);

                    let precioUnidadInput = document.createElement('input');
                    precioUnidadInput.type = 'hidden';
                    precioUnidadInput.name = `precioUnidad[${index}]`;
                    precioUnidadInput.value = detalle.PrecioUnidad;
                    form.appendChild(precioUnidadInput);
                });

                // Mostrar mensaje de procesamiento
                Swal.fire({
                    title: 'Procesando',
                    text: 'Registrando su venta...',
                    icon: 'info',
                    allowOutsideClick: false,
                    showConfirmButton: false,
                    willOpen: () => {
                        Swal.showLoading();
                        form.submit();
                    }
                });
            }
        });
    });

    document.getElementById('ventaForm').addEventListener('submit', function(event) {
        // Si estamos en el paso 2 y no hay detalles, evitar el envío
        if (document.getElementById('paso2').style.display === 'block' && detalles.length === 0) {
            let idProducto = document.getElementById('idProducto').value;
            if (!idProducto) {
                event.preventDefault();
                alert('Debe agregar al menos un producto para registrar la venta');
                return;
            }
        }

        // Agregar los detalles almacenados al formulario antes de enviarlo
        detalles.forEach((detalle, index) => {
            let idProductoInput = document.createElement('input');
            idProductoInput.type = 'hidden';
            idProductoInput.name = `idProducto[${index}]`;
            idProductoInput.value = detalle.IdProducto;
            this.appendChild(idProductoInput);

            let cantidadInput = document.createElement('input');
            cantidadInput.type = 'hidden';
            cantidadInput.name = `cantidad[${index}]`;
            cantidadInput.value = detalle.Cantidad;
            this.appendChild(cantidadInput);

            let precioUnidadInput = document.createElement('input');
            precioUnidadInput.type = 'hidden';
            precioUnidadInput.name = `precioUnidad[${index}]`;
            precioUnidadInput.value = detalle.PrecioUnidad;
            this.appendChild(precioUnidadInput);
        });
    });

    // Inicialización condicional - mostrar el paso 2 si ya pasamos del paso 1
    if (document.getElementById('idProducto') && document.getElementById('idProducto').options.length > 1) {
        document.getElementById('paso1').style.display = 'none';
        document.getElementById('paso2').style.display = 'block';
        document.getElementById('paso2').classList.add('step-active');
    }
</script>